The "2-matrix_divided" module
=============================

Using "matrix_divided"
----------------------

Import module:
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Test one element:
    >>> matrix_divided([[2]], 2)
    [[1.0]]

Test regular matrix:
    >>> matrix_divided([[2, 4, 8], [1, 2, 3]], 2)
    [[1.0, 2.0, 4.0], [0.5, 1.0, 1.5]]

Check if matrix stays unmodififed
    >>> m = [[2, 4, 8], [1, 2, 3]]
    >>> matrix_divided(m, 2)
    [[1.0, 2.0, 4.0], [0.5, 1.0, 1.5]]
    >>> m[1][1]
    2

Test division by negative:
    >>> matrix_divided([[2, 4, 8], [1, 2, 3]], -2)
    [[-1.0, -2.0, -4.0], [-0.5, -1.0, -1.5]]

Test division by inf:
    >>> matrix_divided([[2, 4, 8], [1, 2, 3]], float("inf"))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Test Divide by 0:
    >>> matrix_divided([[2, 2], [2, 2]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Test 1st arg none:
    >>> matrix_divided(none, 1)
    Traceback (most recent call last):
    ...
    NameError: name 'none' is not defined

Test empty matrix:
    >>> matrix_divided([[]], 1)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test 1st arg str:
    >>> matrix_divided("string", 1)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
